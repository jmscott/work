#!/bin/sh

help() {
	cat <<END
Synopsis:
	Safely overwrite a file with contents of standard input.
Usage:
  	$USAGE
Description:
  	Safely replace the contents of a target file with the entire contents 
	of standard input.  All of standard input is read before overwriting
	the target file.  Overwrite will fail if standard input is empty.
	
	Signals HUP, QUIT and TERM are disabled at the start of overwriting 
	the target file.

  	This script is derived from an example in the mighty fine book
	title "The Unix Programming Environment" by Rob Pike and Brian
	Kernighan.
Environment:
	TMPDIR, where the spool files are kept before overwriting.
See:
	https://github.com/jmscott/work/overwrite
	http://www.amazon.com/Unix-Programming-Environment-Prentice-Hall-Software/dp/013937681X
END
}

PROG=$(basename $0)
USAGE="$PROG [--help] target-file-path"

die()
{
	echo "$PROG: ERROR: $@" >&2
	echo "usage: $USAGE" >&2
	exit 1
}

TMPDIR=${TMPDIR:=/tmp}
NEW=$TMPDIR/$PROG-new.$$
OLD=$TMPDIR/$PROG-old.$$
trap "rm -f $NEW $OLD" EXIT

if [ "$1" = '--help' ];  then
	help
	exit 0
fi
test $# -ne 1 && die "wrong number of arguments"

FILE=$1
test -w $FILE || die "can't write to $FILE"

cat >$NEW
STATUS=$?
test $STATUS -eq 0 || die "cat >$NEW non zero: $STATUS: $FILE not overwritten"
test -s $NEW || die "empty input: $FILE not overwritten"

#
#  Disable HUP, QUIT and TERM during copy.
#
trap '' 1 2 15
cp $NEW $FILE
exit 0
