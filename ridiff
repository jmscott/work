#!/bin/bash
#
#  Synopsis:
#	Synchronize a local and remote text file using idiff and rsync.
#  Usage:
#	ridiff /path/to/local/file <remote-ssh-auth>
#  See:
#	https://github.com/jmscott/work/blob/master/idiff.c
#  GNU Depends:
#	realpath
#	chmod		#  needs --reference
#

PROG=$(basename $0)
START_DIR=$(pwd)
WORK_DIR=${TMPDIR:=/tmp}/$PROG.$$.d
WORK_DIR=$(realpath $WORK_DIR)

log()
{
	echo "$@"
}

leave()
{
	cd .. && (
		rm -rf $WORK_DIR					||
			log "WARN: rm work dir failed: exit status=$?" >&2
	)
}

trap leave EXIT

usage()
{
	echo "usage: $PROG path/to/local/file remote-ssh-auth"
}

die()
{
	log "ERROR: $PROG: $@" >&2
	usage >&2
	exit 1
}

test $# = 2 || die "wrong number arguments: got $#, expected 1"

LOCAL_PATH="$1"
SSH_AUTH="$2"
log "local path: $LOCAL_PATH"
log "ssh auth: $SSH_AUTH"
log "start directory: $START_DIR"

test -r "$LOCAL_PATH" || die "can not read local file: $LOCAL_PATH"
log "testing existance of remote file: $SSH_AUTH:$LOCAL_PATH"
ssh $SSH_AUTH "test -r $LOCAL_PATH"					||
	die "can not read remote file: $SSH_AUTH:$LOCAL_PATH"
REAL_LOCAL_PATH=$(realpath $LOCAL_PATH)
log "real local path: $REAL_LOCAL_PATH"
test -r "$REAL_LOCAL_PATH" || die 'can not read real local path'

log "work dir: $WORK_DIR"
mkdir -p $WORK_DIR || die "mkdir work dir failed: exit status=$?"
cd $WORK_DIR || die "cd work dir failed: exit status=$?"

FILE_A=$(basename $LOCAL_PATH).a
log "local file: $FILE_A"
cp $REAL_LOCAL_PATH $FILE_A						||
	die "cp local file failed: exit status=$?"

FILE_B=$(basename $LOCAL_PATH).b
log "fetch remote file: $SSH_AUTH -> $FILE_B"
rsync -va $SSH_AUTH:$LOCAL_PATH $FILE_B					||
	die "rsync remote failed: exit status=$?"

if cmp $FILE_A $FILE_B;  then
	log "files are identical, bye"
	exit 0
fi

log "invoke: idiff $FILE_A $FILE_B"
idiff $FILE_A $FILE_B || die "idiff aborted: exit status=$?"
if [ ! -e idiff.out ];  then
	log 'no idiff.out file: bye'
	exit 0
fi

if [ ! -s idiff.out ];  then
	log 'idiff.out is empty: refuse to overwrite local/remote files'
	exit 0
fi

chmod --reference "$REAL_LOCAL_PATH" idiff.out				||
	die "chmod --reference idiff.out failed: exit status=$?"

echo -n "update local $LOCAL_PATH? (Y/n)? "
read RESPONSE
if [ "$RESPONSE" = Y ];  then
	rsync -va idiff.out $REAL_LOCAL_PATH				||
		die "rsync local update failed: exit status=$?"
	log "local file: update: $LOCAL_PATH"
else
	log "local file: not updated (ok)"
fi
	
echo -n "update remote $SSH_AUTH:$LOCAL_PATH? (Y/n)? "
read RESPONSE
if [ "$RESPONSE" = Y ];  then
	rsync -va idiff.out $SSH_AUTH:$LOCAL_PATH			||
		die "rsync remote update failed: exit status=$?"
	log "remote file: update: $SSH_AUTH:$LOCAL_PATH"
else
	log "remote file: not updated (ok)"
fi
exit 0
